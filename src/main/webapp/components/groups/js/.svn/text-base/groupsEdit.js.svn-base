define(["framework/widgetWithTemplate", "groups/listener/groupsListener"], function() {
	Clazz.createPackage("com.components.groups.js");

	Clazz.com.components.groups.js.groupsEdit = Clazz.extend(Clazz.WidgetWithTemplate, {
		groupsListener : null,
		// template URL, used to indicate where to get the template
		templateUrl: commonVariables.contexturl + "components/groups/template/groupsEdit.tmp",
		configUrl: "components/groups/config/config.json",
		name : commonVariables.groups,
		groups : null,
		groupsRequestBody : {},
		permissionsArray : [],
		usersArray : [],

		/***
		 * Called in initialization time of this class 
		 */
		initialize : function(){
			var self = this;
			if(self.groupsListener === null){
				self.groupsListener = new Clazz.com.components.groups.js.listener.groupsListener();
			}	
		},

		preRender: function(whereToRender, renderFunction){
			var self = this, editData = {};
			self.permissionsArray = [];
			self.usersArray = [];
			self.groupsListener.getUsersList(self.groupsListener.getActionHeader('', "edit"), function(response) {
				editData.data = response.response;
					$.each(response.response.roles,function(index,value) {
						self.permissionsArray.push(value);
					});
					
					$.each(response.response.users,function(index,value) {
						self.usersArray.push(value);
					});
				renderFunction(editData, whereToRender);
			});   								 
		},
		
		postRender : function(element) {
			var self = this;
			self.groupsListener.getUsersList(self.groupsListener.getActionHeader('', "roles"), function(response) {
				$.each(response,function(index,value) {
						if($.inArray(value.id,self.permissionsArray) === -1) {
							$('#rolepermissions ul').append('<li id='+value.id+'><input type="checkbox">'+value.name+'</li>');
						}	
						else
							$('#rolesassigned ul').append('<li id='+value.id+'><input type="checkbox">'+value.name+'</li>');
				});
				
			});  

			self.groupsListener.getUsersList(self.groupsListener.getActionHeader('', "userlist"), function(response) {
				$.each(response.response,function(index,value) {
					if($.inArray(value.id,self.usersArray) === -1) {
						if(value.firstName !== null)
							$('#permissions ul').append('<li id='+value.id+'><input type="checkbox">'+value.firstName+' '+value.lastName+'</li>');
						else
							$('#permissions ul').append('<li id='+value.id+'><input type="checkbox">'+value.name+'</li>');
					} else {
						if(value.firstName !== null)
							$('#assigned ul').append('<li id='+value.id+'><input type="checkbox">'+value.firstName+' '+value.lastName+'</li>');
						else
							$('#assigned ul').append('<li id='+value.id+'><input type="checkbox">'+value.name+'</li>');
					}	
				});
				
			});	
		},
		/***
		 * Bind the action listeners. The bindUI() is called automatically after the render is complete 
		 *
		 */
		bindUI : function(){
			var self=this, tabheight;
			var offset, currentHeight;

			offset = 116;
			currentHeight = $(window).height();

			if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
				switch(currentHeight) {
					case 460:
					case 548: offset = 107; break;
					case 480:
					case 568: offset = 127; break;
					default: offset = 116; break; 
				}
			} 

			tabheight =  $(window).height() - ($(".breadcrumb_div").height() + $(".header_section").height()) - offset;
			$('.create_table_div').css('height',tabheight + 'px'); 
			
			$(window).resize(function() {
				
				offset = 116;
				currentHeight = $(window).height();

				if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
					switch(currentHeight) {
						case 200:
						case 288: offset = 66; break;
						case 220:
						case 308: offset = 86; break;
						case 460:
						case 548: offset = 107; break;
						case 480:
						case 568: offset = 127; break;
						default: offset = 116; break; 
					}
				} 
				
				tabheight =  $(window).height() - ($(".breadcrumb_div").height() + $(".header_section").height()) - offset;
				$('.create_table_div').css('height',tabheight + 'px'); 
			});
			
			$('#btnRight').click(function(e) {
				var selectedOpts = [];
				$('#permissions ul li').each(function() {
					if($(this).find('input[type="checkbox"]').prop('checked') === true) {
						$(this).remove();
						selectedOpts.push($(this));
					}
				});
				if (selectedOpts.length == 0) {
					alert("Nothing to move.");
					e.preventDefault();
				}				
				$('#assigned ul').append(selectedOpts);
				e.preventDefault();
			});

			$('#btnLeft').click(function(e) {
				var selectedOpts = [];
				$('#assigned ul li').each(function() {
					if($(this).find('input[type="checkbox"]').prop('checked') === true) {
						$(this).remove();
						selectedOpts.push($(this));
					}
				});
				if (selectedOpts.length == 0) {
					alert("Nothing to move.");
					e.preventDefault();
				}
				$('#permissions ul').append(selectedOpts);
				$('#permissions ul').find('input[type="checkbox"]').removeAttr('checked');
				//$('#lstBox2').append('<li>DDDDDDDDD</li>');
				e.preventDefault();
			});
			
			$('#btnRightrole').click(function(e) {
				var selectedOpts = [];
				$('#rolepermissions ul li').each(function() {
					if($(this).find('input[type="checkbox"]').prop('checked') === true) {
						$(this).remove();
						selectedOpts.push($(this));
					}
				});
				if (selectedOpts.length == 0) {
					alert("Nothing to move.");
					e.preventDefault();
				}				
				$('#rolesassigned ul').append(selectedOpts);
				e.preventDefault();
			});

			$('#btnLeftrole').click(function(e) {
				var selectedOpts = [];
				$('#rolesassigned ul li').each(function() {
					if($(this).find('input[type="checkbox"]').prop('checked') === true) {
						$(this).remove();
						selectedOpts.push($(this));
					}
				});
				if (selectedOpts.length == 0) {
					alert("Nothing to move.");
					e.preventDefault();
				}
				$('#rolepermissions ul').append(selectedOpts);
				$('#rolepermissions ul').find('input[type="checkbox"]').removeAttr('checked');
				//$('#lstBox2').append('<li>DDDDDDDDD</li>');
				e.preventDefault();
			});	
			
			$("#cancel_group").click(function() {
				// Keyboard Fix for Mobile Devices
				setTimeout(function(){
					  window.scrollTo(0, 0);
				}, 0);

				commonVariables.navListener.getMyObj('groups', function(retVal) {
						self.groups = retVal;							
						Clazz.navigationController.push(self.groups, commonVariables.animation);
					});
			});
			
			$("#groupsupdate").click(function() {
				// Keyboard Fix for Mobile Devices
				setTimeout(function(){
					  window.scrollTo(0, 0);
				}, 0);
				
				var obj = $("#groupname");
				var descobj = $("#groupdesc");
				if(obj.val() === '') {
					obj.addClass('errormessage');
					obj.focus();
					obj.attr('placeholder','Enter Name');
					obj.bind('keypress', function() {
						$(this).removeClass("errormessage");
						$(this).removeAttr("placeholder");
					});
				} else {
					var assignedRoles = [], assignedUsers = [], postBody = {};
					$('#rolesassigned ul li').each(function() {
						assignedRoles.push($(this).attr('id'));
					});					
					
					$('#assigned ul li').each(function() {
						assignedUsers.push($(this).attr('id'));
					});
					postBody.name = obj.val();
					postBody.description = descobj.val();
					postBody.roles = assignedRoles;
					postBody.users = assignedUsers;
					postBody.id = commonVariables.groupId;
					self.groupsListener.getUsersList(self.groupsListener.getActionHeader(postBody, "create"), function(response) {
						commonVariables.navListener.getMyObj('groups', function(retVal) {
							Clazz.navigationController.push(retVal, commonVariables.animation);
						});
					});
				}		
			});	
		}
	});	

	return Clazz.com.components.groups.js.groupsEdit;
});